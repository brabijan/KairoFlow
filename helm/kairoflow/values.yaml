# Default values for kairoflow.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Application deployment configuration
replicaCount: 1

# Image configuration
image:
  nginx:
    repository: ghcr.io/brabijan/kairoflow/nginx
    pullPolicy: IfNotPresent
    tag: "latest"
  php:
    repository: ghcr.io/brabijan/kairoflow/php
    pullPolicy: IfNotPresent
    tag: "latest"

# ServiceAccount configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Image pull secrets for GHCR
imagePullSecrets:
  - name: ghcr-secret

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 80
  annotations: {}

# Ingress configuration (using Traefik IngressRoute)
ingress:
  enabled: true
  host: kairoflow.carpiftw.cz
  tls:
    enabled: true
    secretName: kairoflow-tls
  annotations: {}

# Certificate configuration (cert-manager)
certificate:
  enabled: true
  issuer:
    name: letsencrypt-prod
    kind: ClusterIssuer

# Resource limits and requests
resources:
  nginx:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  php:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# Node selector (optional)
nodeSelector: {}
  # kubernetes.io/hostname: specific-node

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Probes configuration
probes:
  liveness:
    httpGet:
      path: /health
      port: 80
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readiness:
    httpGet:
      path: /health
      port: 80
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 3

# Environment variables for the application
env:
  # Application environment
  NETTE_ENV: "prod"
  NETTE_DEBUG: "0"
  
  # PHP configuration
  PHP_MAX_EXECUTION_TIME: "600"
  PHP_MEMORY_LIMIT: "512M"
  PHP_POST_MAX_SIZE: "500M"
  PHP_UPLOAD_MAX_FILESIZE: "500M"

# External database configuration
# Leave empty to use defaults (for development/testing)
database:
  host: ""  # Default: postgres.default.svc.cluster.local
  port: ""  # Default: 5432
  name: ""  # Default: kairoflow
  user: ""  # Default: kairoflow
  password: ""  # Default: changeme (auto-generated in production)

# Redis configuration
redis:
  # Internal Redis deployment (recommended for development)
  internal:
    enabled: true  # Set to false to use external Redis
    image:
      repository: redis
      tag: "7-alpine"
      pullPolicy: IfNotPresent
    password: ""  # Leave empty for no auth, or set a password
    persistence:
      enabled: true
      storageClass: ""
      accessMode: ReadWriteOnce
      size: 2Gi
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "200m"
  
  # External Redis configuration (used when internal.enabled=false)
  # Leave empty to use internal Redis
  host: ""  # External Redis host
  port: ""  # Default: 6379
  password: ""  # External Redis password

# MinIO/S3 configuration
# Leave empty to use defaults (for development/testing)
minio:
  endpoint: ""  # Default: minio.default.svc.cluster.local
  accessKey: ""  # Default: minioadmin
  secretKey: ""  # Default: minioadmin
  useSSL: true

# OpenAI configuration
# Leave empty to use placeholder
openai:
  apiKey: ""  # Default: sk-placeholder

# Application secrets
# Leave empty to auto-generate random values
appSecrets:
  appSecret: ""  # Auto-generated if empty
  jwtSecret: ""  # Auto-generated if empty

# Persistent Volume Claims
persistence:
  uploads:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 5Gi
    existingClaim: ""
  sessions:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 2Gi
    existingClaim: ""
  recordings:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 10Gi
    existingClaim: ""
  transcriptions:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 5Gi
    existingClaim: ""

# CronJob configuration
cronjobs:
  emailProcessor:
    enabled: true
    schedule: "*/1 * * * *"
    concurrencyPolicy: Forbid
    activeDeadlineSeconds: 50
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "200m"

# Nginx configuration
nginx:
  clientMaxBodySize: "500M"
  proxyConnectTimeout: "600s"
  proxySendTimeout: "600s"
  proxyReadTimeout: "600s"
  workerProcesses: "auto"
  workerConnections: "1024"

# GitHub Container Registry authentication
ghcr:
  username: ""
  password: ""  # GitHub PAT with read:packages scope